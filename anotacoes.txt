[17/08/2020] AULA 1 - Implementando uma REST API com Spring

Definição de REST API
    1. API (Application Programming Interface)
        É um conjunto de funções que faz a intermedição de funcionalidade entre sistemas
            SOFTWARE CONSUMIDOR <<==>> API <<==>> SOFTWARE PROVEDOR

        Web Services vs APIs
            Web Services são um tipo de API, porém a recíprocra não é verdadeira

    2. REST (REpresentational State Transfer)
        É um conjunto de constraints (regras). É uma API que segue os preceitos de Roy Fielding que são:
            - A separação entre cliente e servidor (quem consome e quem provê a API);
            - Escalabilidade: se um servidor não for o suficiente, pode-se adicionar facilmente uma segunda;
            - Independência de linguagem;

        CONSTRAINTS:
            - Cliente-servidor;
            - Stateless: não deve possuir estado, a requisição feita deve ter todas as informações necessárias;
            - Cache;
            - Interface uniforme: conjunto de operações bem definidas;
            - Sistemas em camadas;
            - Código sob demanda: servidor pode mandar como resposta um código

        PROTOCOLO HTTP:
            1. Estrutura de requisição:
                [MÉTODO] [URI] HTTP/[Versão]
                [Cabeçalhos]

                [CORPO/PAYLOAD]

                    Ex:
                        POST /produtos HTTP/1.1
                        Content-Type: application/json
                        Accept: application/json

                        {
                            "nome": "Notebook i7",
                            "preco": 2100.0
                        }

            2. Estrutura de resposta:
                HTTP/[Versão] [STATUS]
                [Cabeçalhos]

                [CORPO]

                    Ex:
                        HTTP/1.1 201 Created
                        Location: /produtos/331
                        Content-Type: application/json

                        {
                            "codigo": 331,
                            "nome": "Notebook i7",
                            "preco": 2100.0
                        }

            3. Recursos do API
                Um único produto é um recurso ou Singleton Resource.
                Uma coleção de recursos se chama Collection Resource. Ao identificá-las, é recomendável usar termos no plural (ex.: "http://api/produtoS")
                Usa-se o protocolo URI (Uniform Resource Identifier) para identificá-los

                    URI x URL
                        URL é um tipo de URI
                        URI identifica um endereço e o método

            4. Spring
                Pontos fortes:
                    - Versatilidade;
                    - Simplicidade;
                    - Maturidade;
                    - Modularidade;
                    - Evolução constante;
                    - Open source;
                    - Comunidade grande e forte;
                    - Popularidade;
                    - Empregabilidade;



